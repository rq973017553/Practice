apply plugin: 'com.android.application'

android {
    compileSdkVersion APP_COMPILE_SDK_VERSION as int // 编译APK所使用的Android API版本
    buildToolsVersion APP_BUILD_TOOLS_VERSION // 编译APK所使用的工具版本

    // 解决添加okhttp3,retrofit编译后报错
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId APP_PACKAGE_NAME
        minSdkVersion APP_MIN_SDK_VERSION as int // 应用兼容的最低的Android API版本
        targetSdkVersion APP_TARGET_SDK_VERSION as int // 应用向前兼容
        versionCode APP_VERSION_CODE as int
        versionName APP_VERSION_NAME
    }

    sourceSets{
        main{
            jniLibs.srcDirs = ['libs']

            // 保证放在aidl中的java类可以被编译
            java.srcDirs = ['src/main/java', 'src/main/aidl']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.viewpager:viewpager:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    testImplementation 'junit:junit:4.12'

    implementation android_support.appcompat_v7
//    implementation android_support.design
    // support-v4jar包
//    implementation android_support.support_v4
    // ConstraintLayout所需要的jar包
    implementation android_support.constraint


    // glide
    implementation glide.glide
    // 注解处理器
    annotationProcessor glide.glide_annotation
    // glide的扩展，用于实现高斯模糊和圆角等效果
    implementation glide.glide_transf

    // 基于OpenGL ES 2.0的图片处理库
    implementation gpuimage.gpuimage

    // RxJava2
    implementation rxjava2.rxjava2
    // RxJava的android适配
    implementation rxjava2.rxjava2_android


    // dagger2
    implementation dagger2.dagger2
    implementation dagger2.dagger2_android
    implementation dagger2.dagger2_support
    // annotationProcessor注解编译
    annotationProcessor dagger2.dagger2_annotation
    annotationProcessor dagger2.dagger2_annotation_compiler

    // retrofit2核心
    implementation retrofit2.retrofit2
    // retrofit2配合rxjava
    implementation retrofit2.retrofit2_rxjava
    // retrofit2配合gson
    implementation retrofit2.retrofit2_gson

    // gson
    implementation gson.gson

    // okhttp3
    implementation okhttp3.okhttp3

    // 自己写的路由
    implementation project(':router')

    // jni练习
    implementation project(':jnilibrary')
}
